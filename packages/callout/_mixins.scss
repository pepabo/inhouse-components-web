@use "sass:map";
@use "sass:list";
@use "@pepabo-inhouse/adapter/functions" as adapter;
@use "./variables";

@mixin style($options: variables.$default-options) {
  display: flex;
  padding: adapter.get-spacing-size(map.get($options, size));
  font-size: adapter.get-font-size(map.get($options, size));
  line-height: adapter.get-line-height($level: map.get($options, size), $density: normal);
  border-radius: adapter.get-radius-size(map.get($options, size));
  box-shadow: adapter.get-elevation-box-shadow(1);
  $options: map.merge(variables.$default-options, $options);

  visibility: hidden;
  opacity: 0%;
  transition: all 0.4s;
  translate: 0 10%;

  ._leading {
    padding-right: adapter.get-spacing-size(s);
    line-height: inherit;
  }

  ._body {
    display: flex;
    flex-direction: column;
    margin: 0;
  }

  ._title {
    margin-block: 0;
  }

  ._content > *:first-child {
    margin-block-start: 0;
  }

  ._content > *:last-child {
    margin-block-end: 0;
  }

  &:active,
  &.--active {
    visibility: visible;
    opacity: 100%;
    translate: 0 0;
    transition: all 0.4s;
  }

  ._trailing {
    margin-left: auto;
  }

  @include -state-style(map.get($options, color));
  @include -size-style(map.get($options, size));

  &.-color-informative {
    @include -state-style(informative);
  }

  &.-color-positive {
    @include -state-style(positive);
  }

  &.-color-negative {
    @include -state-style(negative);
  }

  &.-color-notice {
    @include -state-style(notice);
  }

  @each $size in "s", "m", "l" {
    &.-size-#{$size} {
      @include -size-style($size);
    }
  }
}

@mixin -state-style($state) {
  color: adapter.get-semantic-color($state, 800);
  background-color: adapter.get-semantic-color($state, 100);

  ._leading::after {
    content: map.get(variables.$icon-map, $state);
  }
}

@mixin -size-style($size) {
  font-size: adapter.get-font-size($size);
  line-height: adapter.get-line-height($level: $size, $density: normal);

  ._body {
    gap: adapter.get-spacing-size(map.get(variables.$title-margin-map, $size));
  }
}

@mixin export {
  .in-callout {
    @include style;
  }
}
